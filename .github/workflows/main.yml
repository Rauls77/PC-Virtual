name: Windows Cloud PC - Parsec (Complete Workflow)

on:
  workflow_dispatch:

jobs:
  build:
    name: Full Execution with Parsec
    runs-on: windows-latest
    timeout-minutes: 10080  # Limite máximo de execução (7 dias)

    steps:
      # Etapa 1: Configurar o repositório
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Etapa 2: Baixar e instalar o Parsec
      - name: Download and Install Parsec
        run: |
          try {
            Invoke-WebRequest -Uri "https://builds.parsecgaming.com/package/parsec-windows.exe" -OutFile "parsec-windows.exe"
            Start-Process -FilePath "parsec-windows.exe" -ArgumentList "/S" -Wait
          } catch {
            Write-Error "Erro ao baixar ou instalar o Parsec"
            exit 1
          }

      # Etapa 3: Iniciar o Parsec
      - name: Start Parsec
        run: |
          try {
            Start-Process -FilePath "C:\Program Files\Parsec\parsecd.exe" -ArgumentList "" -NoNewWindow
            Write-Host "Parsec iniciado com sucesso."
          } catch {
            Write-Error "Erro ao iniciar o Parsec."
            exit 1
          }

      # Etapa 4: Monitorar e reiniciar o Parsec se necessário
      - name: Monitor and Restart Parsec if Needed
        run: |
          while ($true) {
            $process = Get-Process -Name "parsecd" -ErrorAction SilentlyContinue
            if (-not $process) {
              Write-Host "Parsec não está rodando, reiniciando..."
              try {
                Start-Process -FilePath "C:\Program Files\Parsec\parsecd.exe" -ArgumentList "" -NoNewWindow
              } catch {
                Write-Error "Erro ao reiniciar o Parsec."
                exit 1
              }
            } else {
              Write-Host "Parsec está em execução."
            }
            Start-Sleep -Seconds 300  # Verifica a cada 5 minutos
          }

      # Etapa 5: Criar ou salvar logs no repositório
      - name: Save Logs or Configurations
        run: |
          $logContent = "Última execução do Parsec: $(Get-Date)"
          $logFile = "parsec-log.txt"
          Set-Content -Path $logFile -Value $logContent
          Write-Host "Log salvo com sucesso em parsec-log.txt"

      # Etapa 6: Commit e push automático das alterações
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Atualizações automáticas - $(Get-Date)" || echo "Nada a commitar"
          git push

      # Etapa 7: Simular execução contínua
      - name: Simulate Infinite Execution
        run: |
          while ($true) {
            Write-Host "Workflow em execução contínua às $(Get-Date)"
            Start-Sleep -Seconds 3600  # Pausa por 1 hora
          }
